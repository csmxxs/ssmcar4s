<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

	<resultMap id="rsUser" type="User">
		<result property="id" column="ID" />
		<result property="name" column="NAME" />
		<result property="deptId" column="DEPT_ID" />
		<result property="entryDate" column="ENTRY_DATE" />
		<result property="sex" column="SEX" />
		<result property="birthday" column="BIRTHDAY" />
		<result property="username" column="USERNAME" />
		<result property="password" column="PASSWORD" />
		<result property="loginFlag" column="LOGIN_FLAG" />
		<result property="roleId" column="ROLE_ID" />
		<result property="filePath" column="FILE_PATH" />
		<result property="applyState" column="APPLY_STATE" />
		<result property="createDate" column="CREATE_DATE" />
	</resultMap>

	<sql id="sql_column_items">
		ID,
		NAME,
		DEPT_ID,
		ENTRY_DATE,
		APPLY_STATE,
		SEX,
		BIRTHDAY,
		USERNAME,
		PASSWORD,
		LOGIN_FLAG,
		ROLE_ID,
		FILE_PATH,
		CREATE_DATE
	</sql>


	<select id="findById" resultMap="rsUser" parameterType="long">
		select
		<include refid="sql_column_items" />
		from t_4s_user
		<where>
			ID = #{id}
		</where>
	</select>
    
    <select id="findUser" resultType="com.zrcx.entity.User" parameterType="java.util.Map">
        select 
          <include refid="sql_column_items" />  
        from t_4s_user 
        <where>
         <if test="userName != '' and userName != null and password != '' and password != null">
           USERNAME=#{userName} and PASSWORD=#{password}
         </if>    
        </where>        
    </select>
  <!--   <select id="queryRolesByName" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT name FROM role r,user_role ur,user u WHERE r.id = ur.roleId AND u.id = ur.userId AND u.userName=#{userName}
    </select> -->


	<select id="findList" resultMap="rsUser" parameterType="java.util.Map">
		select
		<include refid="sql_column_items" />
		from t_4s_user
		<where>
			<if test="User != null and User.id != null ">
				and ID = #{User.id}
			</if>
			<if test="User != null and User.name != null and User.name != '' ">
				and NAME = #{User.name}
			</if>
			<if test="User != null and User.sex != null ">
				and SEX = #{User.sex}
			</if>
			<if test="birthdayBegin != null">
				<![CDATA[
				and BIRTHDAY >= #{birthdayBegin} 
				]]>
			</if>
			<if test="birthdayEnd != null"> 
				<![CDATA[
				and BIRTHDAY <= #{birthdayEnd}
				]]>
			</if>
			<if test="User != null and User.username != null and User.username != '' ">
				and USERNAME = #{User.username}
			</if>
			<if test="User != null and User.password != null and User.password != '' ">
				and PASSWORD = #{User.password}
			</if>
			<if test="User != null and User.loginFlag != null and User.loginFlag!=0">
				and LOGIN_FLAG = #{User.loginFlag}
			</if>
			<if test="User != null and User.roleId != null and User.roleId!=0">
				and ROLE_ID = #{User.roleId}
			</if>
			<if test="User != null and User.filePath != null and User.filePath != '' ">
				and FILE_PATH = #{User.filePath}
			</if>
			<if test="User != null and User.deptId != null and User.deptId!= '' and User.deptId!=0 ">
				and DEPT_ID = #{User.deptId}
			</if>
			<if test="User != null and User.entryDate != null and User.entryDate!= '' ">
				and ENTRY_DATE = #{User.entryDate}
			</if>
			<if test="User != null and User.applyState != null and User.applyState != '' and User.applyState!=0 ">
				and APPLY_STATE = #{User.applyState}
			</if>
			<if test="createDateBegin != null">
				<![CDATA[
				and CREATE_DATE >= #{createDateBegin} 
				]]>
			</if>
			<if test="createDateEnd != null"> 
				<![CDATA[
				and CREATE_DATE <= #{createDateEnd}
				]]>
			</if>
		</where>
		<if test="order != null and order != '' ">
			order by ${order} ${sort}
		</if>
	</select>

	<insert id="add" parameterType="User">
		insert into t_4s_user
		(
		ID,
		NAME,
		SEX,
		BIRTHDAY,
		USERNAME,
		PASSWORD,
		LOGIN_FLAG,
		ROLE_ID,
		FILE_PATH,
		CREATE_DATE,
		DEPT_ID,
		ENTRY_DATE,
		APPLY_STATE 
		)
		values
		(
		seq_t_4s_user.nextval,
		#{name, jdbcType=VARCHAR},
		#{sex, jdbcType=NUMERIC},
		#{birthday, jdbcType=TIMESTAMP},
		#{username, jdbcType=VARCHAR},
		#{password, jdbcType=VARCHAR},
		#{loginFlag, jdbcType=NUMERIC},
		#{roleId, jdbcType=NUMERIC},
		#{filePath, jdbcType=VARCHAR},
		sysdate,
		#{deptId, jdbcType=NUMERIC},
		#{entryDate, jdbcType=TIMESTAMP},
		#{applyState, jdbcType=TIMESTAMP}
		)
	</insert>

	<update id="update" parameterType="User">
		update t_4s_user
		<set>
			<if test=" deptId != null ">DEPT_ID = #{deptId, jdbcType=NUMERIC}, </if>
			<if test=" entryDate != null ">ENTRY_DATE = #{entryDate, jdbcType=TIMESTAMP}, </if>
			<if test=" applyState != null ">APPLY_STATE = #{applyState, jdbcType=NUMERIC}, </if>
			<if test=" name != null ">NAME = #{name, jdbcType=VARCHAR}, </if>
			<if test=" sex != null ">SEX = #{sex, jdbcType=NUMERIC}, </if>
			<if test=" birthday != null ">BIRTHDAY = #{birthday, jdbcType=TIMESTAMP}, </if>
			<if test=" username != null ">USERNAME = #{username, jdbcType=VARCHAR}, </if>
			<if test=" password != null ">PASSWORD = #{password, jdbcType=VARCHAR}, </if>
			<if test=" loginFlag != null ">LOGIN_FLAG = #{loginFlag, jdbcType=NUMERIC}, </if>
			<if test=" roleId != null ">ROLE_ID = #{roleId, jdbcType=NUMERIC}, </if>
			<if test=" filePath != null ">FILE_PATH = #{filePath, jdbcType=VARCHAR}, </if>
			<if test=" createDate != null ">CREATE_DATE = #{createDate, jdbcType=TIMESTAMP}, </if>
			ID = #{id}
			<where>
				ID = #{id}
			</where>
		</set>
	</update>

	<delete id="deleteById" parameterType="long">
		delete from t_4s_user
		<where>
			ID = #{id}
		</where>
	</delete>

</mapper>
