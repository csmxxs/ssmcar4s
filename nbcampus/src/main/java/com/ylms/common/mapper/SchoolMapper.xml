<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylms.common.dao.SchoolMapper">

	<resultMap id="rsSchool" type="com.ylms.common.entity.School">
		<result property="id" column="id" />
		<result property="schoolKey" column="school_key" />
		<result property="schoolName" column="school_name" />
	</resultMap>

	<sql id="sql_column_items">
		id,
		school_key,
		school_name
	</sql>


<sql id="limit_sql">
		<if test="page_sql != null and page_sql != ''">
			${page_sql}
		</if>
	</sql>

	<sql id="where_all">
		<where>
			<if test="findContent != null and findContent !='' ">
				and (
				LOWER(school_name) like
				CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
				or
				LOWER(school_key) like
				CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
				)
			</if>
		</where>
	</sql>


	<!-- 普通的分页查询 -->
	<select id="findAll" resultMap="rsSchool">
		select
		<include refid="sql_column_items" />
		from school
		<include refid="where_all" />
		<include refid="limit_sql" />
	</select>
	<select id="findCount" resultMap="rsSchool">
		select count(id) from school
		<include refid="where_all" />
	</select>

	<select id="findById" resultMap="rsSchool" parameterType="java.lang.Long">
		select
		<include refid="sql_column_items" />
		from school
		<where>
			ID = #{id}
		</where>
	</select>


	<select id="list" resultMap="rsSchool">
		select
		<include refid="sql_column_items" />
		from school
		<where>
			<if test="School != null and School.id != null ">
				and id = #{School.id}
			</if>
			<if test="School != null and School.schoolKey != null ">
				and school_key = #{School.schoolKey}
			</if>
			<if test="School != null and School.schoolName != null ">
				and school_name = #{School.schoolName}
			</if>
		</where>
		<if test="order != null and order != '' ">
			order by ${order} ${sort}
		</if>
	</select>

	<insert id="add" parameterType="com.ylms.common.entity.School">
		insert into school
		(
		school_key,
		school_name
		)
		values
		(
		#{schoolKey, jdbcType=VARCHAR},
		#{schoolName, jdbcType=VARCHAR}
		)
	</insert>

	<update id="update" parameterType="com.ylms.common.entity.School">
		update school
		<set>
			<if test=" schoolKey != null ">school_key = #{schoolKey, jdbcType=VARCHAR}, </if>
			<if test=" schoolName != null ">school_name = #{schoolName, jdbcType=VARCHAR} </if>
		</set>
		<where>
			ID = #{id}
		</where>
	</update>

	<delete id="deleteById" parameterType="java.lang.Long">
		delete from school
		<where>
			ID = #{id}
		</where>
	</delete>

</mapper>
