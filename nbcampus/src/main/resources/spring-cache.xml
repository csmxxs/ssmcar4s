<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-lazy-init="false">
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大能够保持idel状态的对象数 -->
		<property name="maxIdle" value="100" />
		<!-- 最小闲置 -->
		<property name="minIdle" value="10" />
		<!-- 当调用borrow Object方法时，是否进行有效性检查 -->
		<property name="testOnBorrow" value="true" />
		<!-- 当调用return Object方法时，是否进行有效性检查 -->
		<!-- <property name="testOnReturn" value="true"/> -->
	</bean>
	<!-- redis 配置,也可以把配置挪到properties配置文件中,再读取 -->
	<!--理论上加另一个 name,现在把name 和type都加上,更保险 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<!-- 端口，默认6379 -->
		<constructor-arg index="2" value="${redis.port}" name="port"
			type="int" />
		<constructor-arg index="3" value="${redis.timeout}"
			name="timeout" type="int" />
		<constructor-arg index="1" value="${redis.hostName}"
			name="host" type="java.lang.String" />
		<!-- 如果需要配置密码，请打开这里 -->
		<!-- <constructor-arg index="4" value="${redis.password}" name="password" 
			type="java.lang.String"/> -->
	</bean>
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="jedisPoolConfig" />
		<property name="hostName" value="${redis.hostName}" />
		<property name="port" value="${redis.port}" />
		<!-- 如果配置了输入密码，请打开这里 (我的redis配置了密码，所以需开着)-->
		<property name="password" value ="${redis.password}" />
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!--开启事务 -->
		<property name="enableTransactionSupport" value="true"></property>
	</bean>
	<!-- someKey为设置的自增长主键的key的名字 -->
	<bean id="redisAtomicLong"
		class="org.springframework.data.redis.support.atomic.RedisAtomicLong">
		<constructor-arg name="redisCounter" value="someKey"></constructor-arg>
		<constructor-arg name="factory" ref="jedisConnectionFactory"></constructor-arg>
	</bean>

	<!--定义数据库序号 -->
	<bean id="dataToRedis" class="com.ylms.common.utils.DataToRedis">
		<property name="dbClick" value="2" />
		<property name="dbSsscImages" value="3" />
		<property name="dbComplete" value="4" />
		<property name="dbImages" value="5" />
	</bean>
</beans>